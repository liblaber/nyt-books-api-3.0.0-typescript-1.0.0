// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const resultsReviews1 = z.object({
  bookReviewLink: z.string().optional(),
  firstChapterLink: z.string().optional(),
  sundayReviewLink: z.string().optional(),
  articleChapterLink: z.string().optional(),
});

/**
 *
 * @typedef  {ResultsReviews1} resultsReviews1
 * @property {string}
 * @property {string}
 * @property {string}
 * @property {string}
 */
export type ResultsReviews1 = z.infer<typeof resultsReviews1>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const resultsReviews1Response = z
  .object({
    book_review_link: z.string().optional(),
    first_chapter_link: z.string().optional(),
    sunday_review_link: z.string().optional(),
    article_chapter_link: z.string().optional(),
  })
  .transform((data) => ({
    bookReviewLink: data['book_review_link'],
    firstChapterLink: data['first_chapter_link'],
    sundayReviewLink: data['sunday_review_link'],
    articleChapterLink: data['article_chapter_link'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const resultsReviews1Request = z
  .object({
    bookReviewLink: z.string().nullish(),
    firstChapterLink: z.string().nullish(),
    sundayReviewLink: z.string().nullish(),
    articleChapterLink: z.string().nullish(),
  })
  .transform((data) => ({
    book_review_link: data['bookReviewLink'],
    first_chapter_link: data['firstChapterLink'],
    sunday_review_link: data['sundayReviewLink'],
    article_chapter_link: data['articleChapterLink'],
  }));
