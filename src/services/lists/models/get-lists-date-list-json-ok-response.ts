// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  getListsDateListJsonOkResponseResults,
  getListsDateListJsonOkResponseResultsRequest,
  getListsDateListJsonOkResponseResultsResponse,
} from './get-lists-date-list-json-ok-response-results';

/**
 * The shape of the model inside the application code - what the users use
 */
export const getListsDateListJsonOkResponse = z.object({
  status: z.string().optional(),
  copyright: z.string().optional(),
  numResults: z.number().optional(),
  lastModified: z.string().optional(),
  results: z.array(getListsDateListJsonOkResponseResults).optional(),
});

/**
 *
 * @typedef  {GetListsDateListJsonOkResponse} getListsDateListJsonOkResponse
 * @property {string}
 * @property {string}
 * @property {number}
 * @property {string}
 * @property {GetListsDateListJsonOkResponseResults[]}
 */
export type GetListsDateListJsonOkResponse = z.infer<typeof getListsDateListJsonOkResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const getListsDateListJsonOkResponseResponse = z
  .object({
    status: z.string().optional(),
    copyright: z.string().optional(),
    num_results: z.number().optional(),
    last_modified: z.string().optional(),
    results: z.array(getListsDateListJsonOkResponseResultsResponse).optional(),
  })
  .transform((data) => ({
    status: data['status'],
    copyright: data['copyright'],
    numResults: data['num_results'],
    lastModified: data['last_modified'],
    results: data['results'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const getListsDateListJsonOkResponseRequest = z
  .object({
    status: z.string().nullish(),
    copyright: z.string().nullish(),
    numResults: z.number().nullish(),
    lastModified: z.string().nullish(),
    results: z.array(getListsDateListJsonOkResponseResultsRequest).nullish(),
  })
  .transform((data) => ({
    status: data['status'],
    copyright: data['copyright'],
    num_results: data['numResults'],
    last_modified: data['lastModified'],
    results: data['results'],
  }));
